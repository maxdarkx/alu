(0000) 3000  0011000000000000 (   1)                 .ORIG x3000
(3000) E204  1110001000000100 (   2)                 LEA   R1 num
(3001) 6040  0110000001000000 (   3)                 LDR   R0 R1 #0
(3002) 6241  0110001001000001 (   4)                 LDR   R1 R1 #1
(3003) 4803  0100100000000011 (   6)                 JSR   SHIFTRX
(3004) F025  1111000000100101 (   8)                 TRAP  x25
(3005) 4488  0100010010001000 (  10) num             .FILL x4488
(3006) 0005  0000000000000101 (  11) times           .FILL x0005
(3007) 3029  0011000000101001 (  19) SHIFTRX         ST    R0 numrx
(3008) 322C  0011001000101100 (  20)                 ST    R1 timesrx
(3009) 54A0  0101010010100000 (  21)                 AND   R2 R2 #0
(300A) 56E0  0101011011100000 (  22)                 AND   R3 R3 #0
(300B) E625  1110011000100101 (  23)                 LEA   R3 numrx
(300C) 78C1  0111100011000001 (  24)                 STR   R4 R3 #1
(300D) 7AC2  0111101011000010 (  25)                 STR   R5 R3 #2
(300E) 7CC3  0111110011000011 (  26)                 STR   R6 R3 #3
(300F) 5920  0101100100100000 (  28)                 AND   R4 R4 #0
(3010) 56E0  0101011011100000 (  29)                 AND   R3 R3 #0
(3011) 2A24  0010101000100100 (  30)                 LD    R5 mascb1
(3012) 5C05  0101110000000101 (  34) shiftrx_op      AND   R6 R0 R5
(3013) 0403  0000010000000011 (  35)                 BRZ   bitmov
(3014) 2A23  0010101000100011 (  36)                 LD    R5 mascb12
(3015) 1905  0001100100000101 (  37)                 ADD   R4 R4 R5
(3016) 2A1F  0010101000011111 (  38)                 LD    R5 mascb1
(3017) 1620  0001011000100000 (  39) bitmov          ADD   R3 R0 #0
(3018) 16FF  0001011011111111 (  40)                 ADD   R3 R3 #-1
(3019) 0C03  0000110000000011 (  41)                 BRNZ  steprx
(301A) 14A1  0001010010100001 (  43)                 ADD   R2 R2 #1
(301B) 103E  0001000000111110 (  44)                 ADD   R0 R0 #-2
(301C) 03FA  0000001111111010 (  45)                 BRP   bitmov
(301D) 1920  0001100100100000 (  50) steprx          ADD   R4 R4 #0
(301E) 0404  0000010000000100 (  51)                 BRZ   carry
(301F) 5DA0  0101110110100000 (  52)                 AND   R6 R6 #0
(3020) 1DA1  0001110110100001 (  53) carry_mov       ADD   R6 R6 #1
(3021) 193E  0001100100111110 (  54)                 ADD   R4 R4 #-2
(3022) 03FD  0000001111111101 (  55)                 BRP   carry_mov
(3023) 19A0  0001100110100000 (  57) carry           ADD   R4 R6 #0
(3024) 10A0  0001000010100000 (  58)                 ADD   R0 R2 #0
(3025) 54A0  0101010010100000 (  59)                 AND   R2 R2 #0
(3026) 127F  0001001001111111 (  60)                 ADD   R1 R1 #-1
(3027) 03EA  0000001111101010 (  61)                 BRP   shiftrx_op
(3028) 220C  0010001000001100 (  64)                 LD    R1 timesrx
(3029) 1420  0001010000100000 (  65)                 ADD   R2 R0 #0
(302A) 1720  0001011100100000 (  66)                 ADD   R3 R4 #0
(302B) 2005  0010000000000101 (  69)                 LD    R0 numrx
(302C) EC04  1110110000000100 (  70)                 LEA   R6 numrx
(302D) 6981  0110100110000001 (  71)                 LDR   R4 R6 #1
(302E) 6B82  0110101110000010 (  72)                 LDR   R5 R6 #2
(302F) 6D83  0110110110000011 (  73)                 LDR   R6 R6 #3
(3030) C1C0  1100000111000000 (  74)                 RET   
(3031) 0000  0000000000000000 (  78) numrx           .FILL x0000
(3032) 0000  0000000000000000 (  78)                 .FILL x0000
(3033) 0000  0000000000000000 (  78)                 .FILL x0000
(3034) 0000  0000000000000000 (  78)                 .FILL x0000
(3035) 0000  0000000000000000 (  79) timesrx         .FILL x0000
(3036) 0001  0000000000000001 (  79) mascb1          .FILL x0001
(3037) 0400  0000010000000000 (  81) mascb11         .FILL x0400
(3038) 0800  0000100000000000 (  82) mascb12         .FILL x0800
